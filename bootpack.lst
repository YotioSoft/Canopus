     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_init_gdtidt
     7 00000000                                 	EXTERN	_init_pic
     8 00000000                                 	EXTERN	_io_sti
     9 00000000                                 	EXTERN	_keyfifo
    10 00000000                                 	EXTERN	_fifo8_init
    11 00000000                                 	EXTERN	_mousefifo
    12 00000000                                 	EXTERN	_io_out8
    13 00000000                                 	EXTERN	_init_palette
    14 00000000                                 	EXTERN	_init_screen8
    15 00000000                                 	EXTERN	_init_mouse_cursor8
    16 00000000                                 	EXTERN	_putblock8_8
    17 00000000                                 	EXTERN	_sprintf
    18 00000000                                 	EXTERN	_putfonts8_asc
    19 00000000                                 	EXTERN	_io_cli
    20 00000000                                 	EXTERN	_fifo8_status
    21 00000000                                 	EXTERN	_fifo8_get
    22 00000000                                 	EXTERN	_boxfill8
    23 00000000                                 	EXTERN	_io_stihlt
    24 00000000                                 	EXTERN	_io_in8
    25 00000000                                 [FILE "bootpack.c"]
    26                                          [SECTION .data]
    27 00000000                                 LC0:
    28 00000000 28 25 64 2C 20 25 64 29 00      	DB	"(%d, %d)",0x00
    29 00000009                                 LC2:
    30 00000009 5B 6C 63 72 20 25 34 64 20 25   	DB	"[lcr %4d %4d]",0x00
       00000013 34 64 5D 00 
    31 00000017                                 LC3:
    32 00000017 28 25 33 64 2C 20 25 33 64 29   	DB	"(%3d, %3d)",0x00
       00000021 00 
    33 00000022                                 LC1:
    34 00000022 25 30 32 58 00                  	DB	"%02X",0x00
    35                                          [SECTION .text]
    36 00000000                                 	GLOBAL	_HariMain
    37 00000000                                 _HariMain:
    38 00000000 55                              	PUSH	EBP
    39 00000001 89 E5                           	MOV	EBP,ESP
    40 00000003 57                              	PUSH	EDI
    41 00000004 56                              	PUSH	ESI
    42 00000005 53                              	PUSH	EBX
    43 00000006 8D 9D FFFFFEC4                  	LEA	EBX,DWORD [-316+EBP]
    44 0000000C 81 EC 000001E4                  	SUB	ESP,484
    45 00000012 E8 [00000000]                   	CALL	_init_gdtidt
    46 00000017 E8 [00000000]                   	CALL	_init_pic
    47 0000001C E8 [00000000]                   	CALL	_io_sti
    48 00000021 8D 85 FFFFFEA4                  	LEA	EAX,DWORD [-348+EBP]
    49 00000027 50                              	PUSH	EAX
    50 00000028 6A 20                           	PUSH	32
    51 0000002A 68 [00000000]                   	PUSH	_keyfifo
    52 0000002F E8 [00000000]                   	CALL	_fifo8_init
    53 00000034 8D 85 FFFFFE24                  	LEA	EAX,DWORD [-476+EBP]
    54 0000003A 50                              	PUSH	EAX
    55 0000003B 68 00000080                     	PUSH	128
    56 00000040 68 [00000000]                   	PUSH	_mousefifo
    57 00000045 E8 [00000000]                   	CALL	_fifo8_init
    58 0000004A 68 000000F9                     	PUSH	249
    59 0000004F 6A 21                           	PUSH	33
    60 00000051 E8 [00000000]                   	CALL	_io_out8
    61 00000056 83 C4 20                        	ADD	ESP,32
    62 00000059 68 000000EF                     	PUSH	239
    63 0000005E 68 000000A1                     	PUSH	161
    64 00000063 E8 [00000000]                   	CALL	_io_out8
    65 00000068 E8 000002ED                     	CALL	_init_keyboard
    66 0000006D E8 [00000000]                   	CALL	_init_palette
    67 00000072 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
    68 00000079 50                              	PUSH	EAX
    69 0000007A 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
    70 00000081 50                              	PUSH	EAX
    71 00000082 FF 35 00000FF8                  	PUSH	DWORD [4088]
    72 00000088 E8 [00000000]                   	CALL	_init_screen8
    73 0000008D B9 00000002                     	MOV	ECX,2
    74 00000092 A1 00000FF4                     	MOV	EAX,DWORD [4084]
    75 00000097 66 99                           	CWD
    76 00000099 66 F7 F9                        	IDIV	CX
    77 0000009C 98                              	CWDE
    78 0000009D 8D 78 F8                        	LEA	EDI,DWORD [-8+EAX]
    79 000000A0 66 A1 00000FF6                  	MOV	AX,WORD [4086]
    80 000000A6 66 99                           	CWD
    81 000000A8 66 F7 F9                        	IDIV	CX
    82 000000AB 6A 08                           	PUSH	8
    83 000000AD 98                              	CWDE
    84 000000AE 53                              	PUSH	EBX
    85 000000AF 8D 70 F8                        	LEA	ESI,DWORD [-8+EAX]
    86 000000B2 E8 [00000000]                   	CALL	_init_mouse_cursor8
    87 000000B7 6A 10                           	PUSH	16
    88 000000B9 53                              	PUSH	EBX
    89 000000BA 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
    90 000000BD 56                              	PUSH	ESI
    91 000000BE 57                              	PUSH	EDI
    92 000000BF 6A 10                           	PUSH	16
    93 000000C1 6A 10                           	PUSH	16
    94 000000C3 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
    95 000000CA 50                              	PUSH	EAX
    96 000000CB FF 35 00000FF8                  	PUSH	DWORD [4088]
    97 000000D1 E8 [00000000]                   	CALL	_putblock8_8
    98 000000D6 83 C4 3C                        	ADD	ESP,60
    99 000000D9 56                              	PUSH	ESI
   100 000000DA 57                              	PUSH	EDI
   101 000000DB 68 [00000000]                   	PUSH	LC0
   102 000000E0 53                              	PUSH	EBX
   103 000000E1 E8 [00000000]                   	CALL	_sprintf
   104 000000E6 53                              	PUSH	EBX
   105 000000E7 6A 07                           	PUSH	7
   106 000000E9 6A 00                           	PUSH	0
   107 000000EB 6A 00                           	PUSH	0
   108 000000ED 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   109 000000F4 50                              	PUSH	EAX
   110 000000F5 FF 35 00000FF8                  	PUSH	DWORD [4088]
   111 000000FB E8 [00000000]                   	CALL	_putfonts8_asc
   112 00000100 8D 85 FFFFFE14                  	LEA	EAX,DWORD [-492+EBP]
   113 00000106 83 C4 28                        	ADD	ESP,40
   114 00000109 50                              	PUSH	EAX
   115 0000010A E8 0000026C                     	CALL	_enable_mouse
   116 0000010F 59                              	POP	ECX
   117 00000110                                 L18:
   118 00000110 E8 [00000000]                   	CALL	_io_cli
   119 00000115 68 [00000000]                   	PUSH	_keyfifo
   120 0000011A E8 [00000000]                   	CALL	_fifo8_status
   121 0000011F 68 [00000000]                   	PUSH	_mousefifo
   122 00000124 89 C3                           	MOV	EBX,EAX
   123 00000126 E8 [00000000]                   	CALL	_fifo8_status
   124 0000012B 8D 04 18                        	LEA	EAX,DWORD [EAX+EBX*1]
   125 0000012E 5B                              	POP	EBX
   126 0000012F 5A                              	POP	EDX
   127 00000130 85 C0                           	TEST	EAX,EAX
   128 00000132 0F 84 00000206                  	JE	L19
   129 00000138 68 [00000000]                   	PUSH	_keyfifo
   130 0000013D E8 [00000000]                   	CALL	_fifo8_status
   131 00000142 59                              	POP	ECX
   132 00000143 85 C0                           	TEST	EAX,EAX
   133 00000145 0F 85 00000191                  	JNE	L20
   134 0000014B 68 [00000000]                   	PUSH	_mousefifo
   135 00000150 E8 [00000000]                   	CALL	_fifo8_status
   136 00000155 5A                              	POP	EDX
   137 00000156 85 C0                           	TEST	EAX,EAX
   138 00000158 74 B6                           	JE	L18
   139 0000015A 68 [00000000]                   	PUSH	_mousefifo
   140 0000015F E8 [00000000]                   	CALL	_fifo8_get
   141 00000164 89 C3                           	MOV	EBX,EAX
   142 00000166 E8 [00000000]                   	CALL	_io_sti
   143 0000016B 0F B6 C3                        	MOVZX	EAX,BL
   144 0000016E 50                              	PUSH	EAX
   145 0000016F 8D 85 FFFFFE14                  	LEA	EAX,DWORD [-492+EBP]
   146 00000175 50                              	PUSH	EAX
   147 00000176 E8 0000022E                     	CALL	_mouse_decode
   148 0000017B 83 C4 0C                        	ADD	ESP,12
   149 0000017E 85 C0                           	TEST	EAX,EAX
   150 00000180 74 8E                           	JE	L18
   151 00000182 FF B5 FFFFFE1C                  	PUSH	DWORD [-484+EBP]
   152 00000188 FF B5 FFFFFE18                  	PUSH	DWORD [-488+EBP]
   153 0000018E 68 [00000009]                   	PUSH	LC2
   154 00000193 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   155 00000196 53                              	PUSH	EBX
   156 00000197 E8 [00000000]                   	CALL	_sprintf
   157 0000019C 83 C4 10                        	ADD	ESP,16
   158 0000019F 8B 85 FFFFFE20                  	MOV	EAX,DWORD [-480+EBP]
   159 000001A5 A9 00000001                     	TEST	EAX,1
   160 000001AA 74 04                           	JE	L11
   161 000001AC C6 45 C5 4C                     	MOV	BYTE [-59+EBP],76
   162 000001B0                                 L11:
   163 000001B0 A9 00000002                     	TEST	EAX,2
   164 000001B5 74 04                           	JE	L12
   165 000001B7 C6 45 C7 52                     	MOV	BYTE [-57+EBP],82
   166 000001BB                                 L12:
   167 000001BB 83 E0 04                        	AND	EAX,4
   168 000001BE 74 04                           	JE	L13
   169 000001C0 C6 45 C6 43                     	MOV	BYTE [-58+EBP],67
   170 000001C4                                 L13:
   171 000001C4 6A 1F                           	PUSH	31
   172 000001C6 68 00000097                     	PUSH	151
   173 000001CB 6A 10                           	PUSH	16
   174 000001CD 6A 20                           	PUSH	32
   175 000001CF 6A 0F                           	PUSH	15
   176 000001D1 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   177 000001D8 50                              	PUSH	EAX
   178 000001D9 FF 35 00000FF8                  	PUSH	DWORD [4088]
   179 000001DF E8 [00000000]                   	CALL	_boxfill8
   180 000001E4 53                              	PUSH	EBX
   181 000001E5 6A 07                           	PUSH	7
   182 000001E7 6A 10                           	PUSH	16
   183 000001E9 6A 20                           	PUSH	32
   184 000001EB 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   185 000001F2 50                              	PUSH	EAX
   186 000001F3 FF 35 00000FF8                  	PUSH	DWORD [4088]
   187 000001F9 E8 [00000000]                   	CALL	_putfonts8_asc
   188 000001FE 8D 46 0F                        	LEA	EAX,DWORD [15+ESI]
   189 00000201 83 C4 34                        	ADD	ESP,52
   190 00000204 50                              	PUSH	EAX
   191 00000205 8D 47 0F                        	LEA	EAX,DWORD [15+EDI]
   192 00000208 50                              	PUSH	EAX
   193 00000209 56                              	PUSH	ESI
   194 0000020A 57                              	PUSH	EDI
   195 0000020B 6A 08                           	PUSH	8
   196 0000020D 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   197 00000214 50                              	PUSH	EAX
   198 00000215 FF 35 00000FF8                  	PUSH	DWORD [4088]
   199 0000021B E8 [00000000]                   	CALL	_boxfill8
   200 00000220 83 C4 1C                        	ADD	ESP,28
   201 00000223 03 B5 FFFFFE1C                  	ADD	ESI,DWORD [-484+EBP]
   202 00000229 03 BD FFFFFE18                  	ADD	EDI,DWORD [-488+EBP]
   203 0000022F 0F 88 000000A0                  	JS	L21
   204 00000235                                 L14:
   205 00000235 85 F6                           	TEST	ESI,ESI
   206 00000237 0F 88 00000091                  	JS	L22
   207 0000023D                                 L15:
   208 0000023D 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   209 00000244 83 E8 10                        	SUB	EAX,16
   210 00000247 39 C7                           	CMP	EDI,EAX
   211 00000249 7E 02                           	JLE	L16
   212 0000024B 89 C7                           	MOV	EDI,EAX
   213 0000024D                                 L16:
   214 0000024D 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   215 00000254 83 E8 10                        	SUB	EAX,16
   216 00000257 39 C6                           	CMP	ESI,EAX
   217 00000259 7E 02                           	JLE	L17
   218 0000025B 89 C6                           	MOV	ESI,EAX
   219 0000025D                                 L17:
   220 0000025D 56                              	PUSH	ESI
   221 0000025E 57                              	PUSH	EDI
   222 0000025F 68 [00000017]                   	PUSH	LC3
   223 00000264 53                              	PUSH	EBX
   224 00000265 E8 [00000000]                   	CALL	_sprintf
   225 0000026A 6A 0F                           	PUSH	15
   226 0000026C 6A 4F                           	PUSH	79
   227 0000026E 6A 00                           	PUSH	0
   228 00000270 6A 00                           	PUSH	0
   229 00000272 6A 08                           	PUSH	8
   230 00000274 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   231 0000027B 50                              	PUSH	EAX
   232 0000027C FF 35 00000FF8                  	PUSH	DWORD [4088]
   233 00000282 E8 [00000000]                   	CALL	_boxfill8
   234 00000287 83 C4 2C                        	ADD	ESP,44
   235 0000028A 53                              	PUSH	EBX
   236 0000028B 6A 07                           	PUSH	7
   237 0000028D 6A 00                           	PUSH	0
   238 0000028F 6A 00                           	PUSH	0
   239 00000291 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   240 00000298 50                              	PUSH	EAX
   241 00000299 FF 35 00000FF8                  	PUSH	DWORD [4088]
   242 0000029F E8 [00000000]                   	CALL	_putfonts8_asc
   243 000002A4 8D 85 FFFFFEC4                  	LEA	EAX,DWORD [-316+EBP]
   244 000002AA 6A 10                           	PUSH	16
   245 000002AC 50                              	PUSH	EAX
   246 000002AD 56                              	PUSH	ESI
   247 000002AE 57                              	PUSH	EDI
   248 000002AF 6A 10                           	PUSH	16
   249 000002B1 6A 10                           	PUSH	16
   250 000002B3 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   251 000002BA 50                              	PUSH	EAX
   252 000002BB FF 35 00000FF8                  	PUSH	DWORD [4088]
   253 000002C1 E8 [00000000]                   	CALL	_putblock8_8
   254 000002C6 83 C4 38                        	ADD	ESP,56
   255 000002C9 E9 FFFFFE42                     	JMP	L18
   256 000002CE                                 L22:
   257 000002CE 31 F6                           	XOR	ESI,ESI
   258 000002D0 E9 FFFFFF68                     	JMP	L15
   259 000002D5                                 L21:
   260 000002D5 31 FF                           	XOR	EDI,EDI
   261 000002D7 E9 FFFFFF59                     	JMP	L14
   262 000002DC                                 L20:
   263 000002DC 68 [00000000]                   	PUSH	_keyfifo
   264 000002E1 E8 [00000000]                   	CALL	_fifo8_get
   265 000002E6 89 C3                           	MOV	EBX,EAX
   266 000002E8 E8 [00000000]                   	CALL	_io_sti
   267 000002ED 53                              	PUSH	EBX
   268 000002EE 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   269 000002F1 68 [00000022]                   	PUSH	LC1
   270 000002F6 53                              	PUSH	EBX
   271 000002F7 E8 [00000000]                   	CALL	_sprintf
   272 000002FC 6A 1F                           	PUSH	31
   273 000002FE 6A 0F                           	PUSH	15
   274 00000300 6A 10                           	PUSH	16
   275 00000302 6A 00                           	PUSH	0
   276 00000304 6A 0F                           	PUSH	15
   277 00000306 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   278 0000030D 50                              	PUSH	EAX
   279 0000030E FF 35 00000FF8                  	PUSH	DWORD [4088]
   280 00000314 E8 [00000000]                   	CALL	_boxfill8
   281 00000319 83 C4 2C                        	ADD	ESP,44
   282 0000031C 53                              	PUSH	EBX
   283 0000031D 6A 07                           	PUSH	7
   284 0000031F 6A 10                           	PUSH	16
   285 00000321 6A 00                           	PUSH	0
   286 00000323 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   287 0000032A 50                              	PUSH	EAX
   288 0000032B FF 35 00000FF8                  	PUSH	DWORD [4088]
   289 00000331 E8 [00000000]                   	CALL	_putfonts8_asc
   290 00000336 83 C4 18                        	ADD	ESP,24
   291 00000339 E9 FFFFFDD2                     	JMP	L18
   292 0000033E                                 L19:
   293 0000033E E8 [00000000]                   	CALL	_io_stihlt
   294 00000343 E9 FFFFFDC8                     	JMP	L18
   295 00000348                                 	GLOBAL	_wait_KBC_sendready
   296 00000348                                 _wait_KBC_sendready:
   297 00000348 55                              	PUSH	EBP
   298 00000349 89 E5                           	MOV	EBP,ESP
   299 0000034B                                 L28:
   300 0000034B 6A 64                           	PUSH	100
   301 0000034D E8 [00000000]                   	CALL	_io_in8
   302 00000352 5A                              	POP	EDX
   303 00000353 83 E0 02                        	AND	EAX,2
   304 00000356 75 F3                           	JNE	L28
   305 00000358 C9                              	LEAVE
   306 00000359 C3                              	RET
   307 0000035A                                 	GLOBAL	_init_keyboard
   308 0000035A                                 _init_keyboard:
   309 0000035A 55                              	PUSH	EBP
   310 0000035B 89 E5                           	MOV	EBP,ESP
   311 0000035D E8 FFFFFFE6                     	CALL	_wait_KBC_sendready
   312 00000362 6A 60                           	PUSH	96
   313 00000364 6A 64                           	PUSH	100
   314 00000366 E8 [00000000]                   	CALL	_io_out8
   315 0000036B E8 FFFFFFD8                     	CALL	_wait_KBC_sendready
   316 00000370 6A 47                           	PUSH	71
   317 00000372 6A 60                           	PUSH	96
   318 00000374 E8 [00000000]                   	CALL	_io_out8
   319 00000379 C9                              	LEAVE
   320 0000037A C3                              	RET
   321 0000037B                                 	GLOBAL	_enable_mouse
   322 0000037B                                 _enable_mouse:
   323 0000037B 55                              	PUSH	EBP
   324 0000037C 89 E5                           	MOV	EBP,ESP
   325 0000037E E8 FFFFFFC5                     	CALL	_wait_KBC_sendready
   326 00000383 68 000000D4                     	PUSH	212
   327 00000388 6A 64                           	PUSH	100
   328 0000038A E8 [00000000]                   	CALL	_io_out8
   329 0000038F E8 FFFFFFB4                     	CALL	_wait_KBC_sendready
   330 00000394 68 000000F4                     	PUSH	244
   331 00000399 6A 60                           	PUSH	96
   332 0000039B E8 [00000000]                   	CALL	_io_out8
   333 000003A0 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
   334 000003A3 C6 40 03 00                     	MOV	BYTE [3+EAX],0
   335 000003A7 C9                              	LEAVE
   336 000003A8 C3                              	RET
   337 000003A9                                 	GLOBAL	_mouse_decode
   338 000003A9                                 _mouse_decode:
   339 000003A9 55                              	PUSH	EBP
   340 000003AA 89 E5                           	MOV	EBP,ESP
   341 000003AC 56                              	PUSH	ESI
   342 000003AD 53                              	PUSH	EBX
   343 000003AE 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
   344 000003B1 8B 4D 0C                        	MOV	ECX,DWORD [12+EBP]
   345 000003B4 89 CE                           	MOV	ESI,ECX
   346 000003B6 8A 42 03                        	MOV	AL,BYTE [3+EDX]
   347 000003B9 84 C0                           	TEST	AL,AL
   348 000003BB 75 11                           	JNE	L32
   349 000003BD 80 F9 FA                        	CMP	CL,-6
   350 000003C0 74 06                           	JE	L44
   351 000003C2                                 L43:
   352 000003C2 31 C0                           	XOR	EAX,EAX
   353 000003C4                                 L31:
   354 000003C4 5B                              	POP	EBX
   355 000003C5 5E                              	POP	ESI
   356 000003C6 5D                              	POP	EBP
   357 000003C7 C3                              	RET
   358 000003C8                                 L44:
   359 000003C8 C6 42 03 01                     	MOV	BYTE [3+EDX],1
   360 000003CC EB F4                           	JMP	L43
   361 000003CE                                 L32:
   362 000003CE 3C 01                           	CMP	AL,1
   363 000003D0 74 61                           	JE	L45
   364 000003D2 3C 02                           	CMP	AL,2
   365 000003D4 74 54                           	JE	L46
   366 000003D6 3C 03                           	CMP	AL,3
   367 000003D8 74 05                           	JE	L47
   368 000003DA 83 C8 FF                        	OR	EAX,-1
   369 000003DD EB E5                           	JMP	L31
   370 000003DF                                 L47:
   371 000003DF 8A 1A                           	MOV	BL,BYTE [EDX]
   372 000003E1 81 E6 000000FF                  	AND	ESI,255
   373 000003E7 89 D8                           	MOV	EAX,EBX
   374 000003E9 88 4A 02                        	MOV	BYTE [2+EDX],CL
   375 000003EC 83 E0 07                        	AND	EAX,7
   376 000003EF 89 72 08                        	MOV	DWORD [8+EDX],ESI
   377 000003F2 89 42 0C                        	MOV	DWORD [12+EDX],EAX
   378 000003F5 88 D8                           	MOV	AL,BL
   379 000003F7 0F B6 4A 01                     	MOVZX	ECX,BYTE [1+EDX]
   380 000003FB 83 E0 10                        	AND	EAX,16
   381 000003FE 89 4A 04                        	MOV	DWORD [4+EDX],ECX
   382 00000401 C6 42 03 01                     	MOV	BYTE [3+EDX],1
   383 00000405 84 C0                           	TEST	AL,AL
   384 00000407 74 09                           	JE	L41
   385 00000409 81 C9 FFFFFF00                  	OR	ECX,-256
   386 0000040F 89 4A 04                        	MOV	DWORD [4+EDX],ECX
   387 00000412                                 L41:
   388 00000412 83 E3 20                        	AND	EBX,32
   389 00000415 84 DB                           	TEST	BL,BL
   390 00000417 74 07                           	JE	L42
   391 00000419 81 4A 08 FFFFFF00               	OR	DWORD [8+EDX],-256
   392 00000420                                 L42:
   393 00000420 F7 5A 08                        	NEG	DWORD [8+EDX]
   394 00000423 B8 00000001                     	MOV	EAX,1
   395 00000428 EB 9A                           	JMP	L31
   396 0000042A                                 L46:
   397 0000042A 88 4A 01                        	MOV	BYTE [1+EDX],CL
   398 0000042D C6 42 03 03                     	MOV	BYTE [3+EDX],3
   399 00000431 EB 8F                           	JMP	L43
   400 00000433                                 L45:
   401 00000433 83 E6 C8                        	AND	ESI,-56
   402 00000436 89 F0                           	MOV	EAX,ESI
   403 00000438 3C 08                           	CMP	AL,8
   404 0000043A 75 86                           	JNE	L43
   405 0000043C 88 0A                           	MOV	BYTE [EDX],CL
   406 0000043E C6 42 03 02                     	MOV	BYTE [3+EDX],2
   407 00000442 E9 FFFFFF7B                     	JMP	L43
