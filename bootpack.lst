     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_init_gdtidt
     7 00000000                                 	EXTERN	_init_pic
     8 00000000                                 	EXTERN	_io_sti
     9 00000000                                 	EXTERN	_keyfifo
    10 00000000                                 	EXTERN	_fifo8_init
    11 00000000                                 	EXTERN	_mousefifo
    12 00000000                                 	EXTERN	_io_out8
    13 00000000                                 	EXTERN	_init_keyboard
    14 00000000                                 	EXTERN	_enable_mouse
    15 00000000                                 	EXTERN	_memtest
    16 00000000                                 	EXTERN	_memman_init
    17 00000000                                 	EXTERN	_memman_free
    18 00000000                                 	EXTERN	_init_palette
    19 00000000                                 	EXTERN	_shtctl_init
    20 00000000                                 	EXTERN	_sheet_alloc
    21 00000000                                 	EXTERN	_memman_alloc_4k
    22 00000000                                 	EXTERN	_sheet_setbuf
    23 00000000                                 	EXTERN	_init_screen8
    24 00000000                                 	EXTERN	_init_mouse_cursor8
    25 00000000                                 	EXTERN	_sheet_slide
    26 00000000                                 	EXTERN	_sheet_updown
    27 00000000                                 	EXTERN	_sprintf
    28 00000000                                 	EXTERN	_putfonts8_asc
    29 00000000                                 	EXTERN	_memman_total
    30 00000000                                 	EXTERN	_sheet_refresh
    31 00000000                                 	EXTERN	_io_cli
    32 00000000                                 	EXTERN	_fifo8_status
    33 00000000                                 	EXTERN	_fifo8_get
    34 00000000                                 	EXTERN	_mouse_decode
    35 00000000                                 	EXTERN	_boxfill8
    36 00000000                                 	EXTERN	_io_stihlt
    37 00000000                                 [FILE "bootpack.c"]
    38                                          [SECTION .data]
    39 00000000                                 LC0:
    40 00000000 28 25 33 64 2C 20 25 33 64 29   	DB	"(%3d, %3d)",0x00
       0000000A 00 
    41 0000000B                                 LC1:
    42 0000000B 6D 65 6D 6F 72 79 20 25 64 4D   	DB	"memory %dMB free : %dKB",0x00
       00000015 42 20 66 72 65 65 20 3A 20 25 
       0000001F 64 4B 42 00 
    43 00000023                                 LC3:
    44 00000023 5B 6C 63 72 20 25 34 64 20 25   	DB	"[lcr %4d %4d]",0x00
       0000002D 34 64 5D 00 
    45 00000031                                 LC2:
    46 00000031 25 30 32 58 00                  	DB	"%02X",0x00
    47                                          [SECTION .text]
    48 00000000                                 	GLOBAL	_HariMain
    49 00000000                                 _HariMain:
    50 00000000 55                              	PUSH	EBP
    51 00000001 89 E5                           	MOV	EBP,ESP
    52 00000003 57                              	PUSH	EDI
    53 00000004 56                              	PUSH	ESI
    54 00000005 53                              	PUSH	EBX
    55 00000006 8D 9D FFFFFD24                  	LEA	EBX,DWORD [-732+EBP]
    56 0000000C 81 EC 000002FC                  	SUB	ESP,764
    57 00000012 E8 [00000000]                   	CALL	_init_gdtidt
    58 00000017 E8 [00000000]                   	CALL	_init_pic
    59 0000001C E8 [00000000]                   	CALL	_io_sti
    60 00000021 8D 85 FFFFFEA4                  	LEA	EAX,DWORD [-348+EBP]
    61 00000027 50                              	PUSH	EAX
    62 00000028 6A 20                           	PUSH	32
    63 0000002A 68 [00000000]                   	PUSH	_keyfifo
    64 0000002F E8 [00000000]                   	CALL	_fifo8_init
    65 00000034 8D 85 FFFFFE24                  	LEA	EAX,DWORD [-476+EBP]
    66 0000003A 50                              	PUSH	EAX
    67 0000003B 68 00000080                     	PUSH	128
    68 00000040 68 [00000000]                   	PUSH	_mousefifo
    69 00000045 E8 [00000000]                   	CALL	_fifo8_init
    70 0000004A 68 000000F9                     	PUSH	249
    71 0000004F 6A 21                           	PUSH	33
    72 00000051 E8 [00000000]                   	CALL	_io_out8
    73 00000056 83 C4 20                        	ADD	ESP,32
    74 00000059 68 000000EF                     	PUSH	239
    75 0000005E 68 000000A1                     	PUSH	161
    76 00000063 E8 [00000000]                   	CALL	_io_out8
    77 00000068 E8 [00000000]                   	CALL	_init_keyboard
    78 0000006D 8D 85 FFFFFD14                  	LEA	EAX,DWORD [-748+EBP]
    79 00000073 50                              	PUSH	EAX
    80 00000074 E8 [00000000]                   	CALL	_enable_mouse
    81 00000079 68 BFFFFFFF                     	PUSH	-1073741825
    82 0000007E 68 00400000                     	PUSH	4194304
    83 00000083 E8 [00000000]                   	CALL	_memtest
    84 00000088 68 003C0000                     	PUSH	3932160
    85 0000008D 89 85 FFFFFD0C                  	MOV	DWORD [-756+EBP],EAX
    86 00000093 E8 [00000000]                   	CALL	_memman_init
    87 00000098 68 0009E000                     	PUSH	647168
    88 0000009D 68 00001000                     	PUSH	4096
    89 000000A2 68 003C0000                     	PUSH	3932160
    90 000000A7 E8 [00000000]                   	CALL	_memman_free
    91 000000AC 8B 85 FFFFFD0C                  	MOV	EAX,DWORD [-756+EBP]
    92 000000B2 83 C4 24                        	ADD	ESP,36
    93 000000B5 2D 00400000                     	SUB	EAX,4194304
    94 000000BA 50                              	PUSH	EAX
    95 000000BB 68 00400000                     	PUSH	4194304
    96 000000C0 68 003C0000                     	PUSH	3932160
    97 000000C5 E8 [00000000]                   	CALL	_memman_free
    98 000000CA E8 [00000000]                   	CALL	_init_palette
    99 000000CF 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   100 000000D6 50                              	PUSH	EAX
   101 000000D7 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   102 000000DE 50                              	PUSH	EAX
   103 000000DF FF 35 00000FF8                  	PUSH	DWORD [4088]
   104 000000E5 68 003C0000                     	PUSH	3932160
   105 000000EA E8 [00000000]                   	CALL	_shtctl_init
   106 000000EF 50                              	PUSH	EAX
   107 000000F0 89 85 FFFFFD08                  	MOV	DWORD [-760+EBP],EAX
   108 000000F6 E8 [00000000]                   	CALL	_sheet_alloc
   109 000000FB 83 C4 20                        	ADD	ESP,32
   110 000000FE FF B5 FFFFFD08                  	PUSH	DWORD [-760+EBP]
   111 00000104 89 C6                           	MOV	ESI,EAX
   112 00000106 E8 [00000000]                   	CALL	_sheet_alloc
   113 0000010B 0F BF 15 00000FF6               	MOVSX	EDX,WORD [4086]
   114 00000112 89 85 FFFFFD04                  	MOV	DWORD [-764+EBP],EAX
   115 00000118 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   116 0000011F 0F AF C2                        	IMUL	EAX,EDX
   117 00000122 50                              	PUSH	EAX
   118 00000123 68 003C0000                     	PUSH	3932160
   119 00000128 E8 [00000000]                   	CALL	_memman_alloc_4k
   120 0000012D 6A FF                           	PUSH	-1
   121 0000012F 89 85 FFFFFD00                  	MOV	DWORD [-768+EBP],EAX
   122 00000135 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   123 0000013C 50                              	PUSH	EAX
   124 0000013D 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   125 00000144 50                              	PUSH	EAX
   126 00000145 FF B5 FFFFFD00                  	PUSH	DWORD [-768+EBP]
   127 0000014B 56                              	PUSH	ESI
   128 0000014C E8 [00000000]                   	CALL	_sheet_setbuf
   129 00000151 83 C4 20                        	ADD	ESP,32
   130 00000154 6A 63                           	PUSH	99
   131 00000156 6A 10                           	PUSH	16
   132 00000158 6A 10                           	PUSH	16
   133 0000015A 53                              	PUSH	EBX
   134 0000015B FF B5 FFFFFD04                  	PUSH	DWORD [-764+EBP]
   135 00000161 E8 [00000000]                   	CALL	_sheet_setbuf
   136 00000166 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   137 0000016D 50                              	PUSH	EAX
   138 0000016E 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   139 00000175 50                              	PUSH	EAX
   140 00000176 FF B5 FFFFFD00                  	PUSH	DWORD [-768+EBP]
   141 0000017C E8 [00000000]                   	CALL	_init_screen8
   142 00000181 83 C4 20                        	ADD	ESP,32
   143 00000184 6A 63                           	PUSH	99
   144 00000186 53                              	PUSH	EBX
   145 00000187 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   146 0000018A E8 [00000000]                   	CALL	_init_mouse_cursor8
   147 0000018F 6A 00                           	PUSH	0
   148 00000191 6A 00                           	PUSH	0
   149 00000193 56                              	PUSH	ESI
   150 00000194 FF B5 FFFFFD08                  	PUSH	DWORD [-760+EBP]
   151 0000019A E8 [00000000]                   	CALL	_sheet_slide
   152 0000019F B9 00000002                     	MOV	ECX,2
   153 000001A4 A1 00000FF4                     	MOV	EAX,DWORD [4084]
   154 000001A9 66 99                           	CWD
   155 000001AB 66 F7 F9                        	IDIV	CX
   156 000001AE 98                              	CWDE
   157 000001AF 83 E8 08                        	SUB	EAX,8
   158 000001B2 89 85 FFFFFD10                  	MOV	DWORD [-752+EBP],EAX
   159 000001B8 66 A1 00000FF6                  	MOV	AX,WORD [4086]
   160 000001BE 66 99                           	CWD
   161 000001C0 66 F7 F9                        	IDIV	CX
   162 000001C3 98                              	CWDE
   163 000001C4 8D 78 F8                        	LEA	EDI,DWORD [-8+EAX]
   164 000001C7 57                              	PUSH	EDI
   165 000001C8 FF B5 FFFFFD10                  	PUSH	DWORD [-752+EBP]
   166 000001CE FF B5 FFFFFD04                  	PUSH	DWORD [-764+EBP]
   167 000001D4 FF B5 FFFFFD08                  	PUSH	DWORD [-760+EBP]
   168 000001DA E8 [00000000]                   	CALL	_sheet_slide
   169 000001DF 83 C4 28                        	ADD	ESP,40
   170 000001E2 6A 00                           	PUSH	0
   171 000001E4 56                              	PUSH	ESI
   172 000001E5 FF B5 FFFFFD08                  	PUSH	DWORD [-760+EBP]
   173 000001EB E8 [00000000]                   	CALL	_sheet_updown
   174 000001F0 6A 01                           	PUSH	1
   175 000001F2 FF B5 FFFFFD04                  	PUSH	DWORD [-764+EBP]
   176 000001F8 FF B5 FFFFFD08                  	PUSH	DWORD [-760+EBP]
   177 000001FE E8 [00000000]                   	CALL	_sheet_updown
   178 00000203 57                              	PUSH	EDI
   179 00000204 FF B5 FFFFFD10                  	PUSH	DWORD [-752+EBP]
   180 0000020A 68 [00000000]                   	PUSH	LC0
   181 0000020F 53                              	PUSH	EBX
   182 00000210 E8 [00000000]                   	CALL	_sprintf
   183 00000215 83 C4 28                        	ADD	ESP,40
   184 00000218 53                              	PUSH	EBX
   185 00000219 6A 07                           	PUSH	7
   186 0000021B 6A 00                           	PUSH	0
   187 0000021D 6A 00                           	PUSH	0
   188 0000021F 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   189 00000226 50                              	PUSH	EAX
   190 00000227 FF B5 FFFFFD00                  	PUSH	DWORD [-768+EBP]
   191 0000022D E8 [00000000]                   	CALL	_putfonts8_asc
   192 00000232 68 003C0000                     	PUSH	3932160
   193 00000237 E8 [00000000]                   	CALL	_memman_total
   194 0000023C C1 AD FFFFFD0C 14               	SHR	DWORD [-756+EBP],20
   195 00000243 C1 E8 0A                        	SHR	EAX,10
   196 00000246 89 04 24                        	MOV	DWORD [ESP],EAX
   197 00000249 FF B5 FFFFFD0C                  	PUSH	DWORD [-756+EBP]
   198 0000024F 68 [0000000B]                   	PUSH	LC1
   199 00000254 53                              	PUSH	EBX
   200 00000255 E8 [00000000]                   	CALL	_sprintf
   201 0000025A 83 C4 28                        	ADD	ESP,40
   202 0000025D 53                              	PUSH	EBX
   203 0000025E 6A 07                           	PUSH	7
   204 00000260 6A 20                           	PUSH	32
   205 00000262                                 L19:
   206 00000262 6A 00                           	PUSH	0
   207 00000264 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   208 0000026B 50                              	PUSH	EAX
   209 0000026C FF B5 FFFFFD00                  	PUSH	DWORD [-768+EBP]
   210 00000272 E8 [00000000]                   	CALL	_putfonts8_asc
   211 00000277 FF B5 FFFFFD08                  	PUSH	DWORD [-760+EBP]
   212 0000027D E8 [00000000]                   	CALL	_sheet_refresh
   213 00000282 83 C4 1C                        	ADD	ESP,28
   214 00000285                                 L18:
   215 00000285 E8 [00000000]                   	CALL	_io_cli
   216 0000028A 68 [00000000]                   	PUSH	_keyfifo
   217 0000028F E8 [00000000]                   	CALL	_fifo8_status
   218 00000294 68 [00000000]                   	PUSH	_mousefifo
   219 00000299 89 C3                           	MOV	EBX,EAX
   220 0000029B E8 [00000000]                   	CALL	_fifo8_status
   221 000002A0 8D 04 18                        	LEA	EAX,DWORD [EAX+EBX*1]
   222 000002A3 5B                              	POP	EBX
   223 000002A4 5E                              	POP	ESI
   224 000002A5 85 C0                           	TEST	EAX,EAX
   225 000002A7 0F 84 000001DD                  	JE	L20
   226 000002AD 68 [00000000]                   	PUSH	_keyfifo
   227 000002B2 E8 [00000000]                   	CALL	_fifo8_status
   228 000002B7 59                              	POP	ECX
   229 000002B8 85 C0                           	TEST	EAX,EAX
   230 000002BA 0F 85 00000180                  	JNE	L21
   231 000002C0 68 [00000000]                   	PUSH	_mousefifo
   232 000002C5 E8 [00000000]                   	CALL	_fifo8_status
   233 000002CA 5A                              	POP	EDX
   234 000002CB 85 C0                           	TEST	EAX,EAX
   235 000002CD 74 B6                           	JE	L18
   236 000002CF 68 [00000000]                   	PUSH	_mousefifo
   237 000002D4 E8 [00000000]                   	CALL	_fifo8_get
   238 000002D9 89 C3                           	MOV	EBX,EAX
   239 000002DB E8 [00000000]                   	CALL	_io_sti
   240 000002E0 0F B6 C3                        	MOVZX	EAX,BL
   241 000002E3 50                              	PUSH	EAX
   242 000002E4 8D 85 FFFFFD14                  	LEA	EAX,DWORD [-748+EBP]
   243 000002EA 50                              	PUSH	EAX
   244 000002EB E8 [00000000]                   	CALL	_mouse_decode
   245 000002F0 83 C4 0C                        	ADD	ESP,12
   246 000002F3 85 C0                           	TEST	EAX,EAX
   247 000002F5 74 8E                           	JE	L18
   248 000002F7 FF B5 FFFFFD1C                  	PUSH	DWORD [-740+EBP]
   249 000002FD FF B5 FFFFFD18                  	PUSH	DWORD [-744+EBP]
   250 00000303 68 [00000023]                   	PUSH	LC3
   251 00000308 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   252 0000030B 53                              	PUSH	EBX
   253 0000030C E8 [00000000]                   	CALL	_sprintf
   254 00000311 83 C4 10                        	ADD	ESP,16
   255 00000314 8B 85 FFFFFD20                  	MOV	EAX,DWORD [-736+EBP]
   256 0000031A A9 00000001                     	TEST	EAX,1
   257 0000031F 74 04                           	JE	L11
   258 00000321 C6 45 C5 4C                     	MOV	BYTE [-59+EBP],76
   259 00000325                                 L11:
   260 00000325 A9 00000002                     	TEST	EAX,2
   261 0000032A 74 04                           	JE	L12
   262 0000032C C6 45 C7 52                     	MOV	BYTE [-57+EBP],82
   263 00000330                                 L12:
   264 00000330 83 E0 04                        	AND	EAX,4
   265 00000333 74 04                           	JE	L13
   266 00000335 C6 45 C6 43                     	MOV	BYTE [-58+EBP],67
   267 00000339                                 L13:
   268 00000339 6A 1F                           	PUSH	31
   269 0000033B 68 00000097                     	PUSH	151
   270 00000340 6A 10                           	PUSH	16
   271 00000342 6A 20                           	PUSH	32
   272 00000344 6A 0F                           	PUSH	15
   273 00000346 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   274 0000034D 50                              	PUSH	EAX
   275 0000034E FF B5 FFFFFD00                  	PUSH	DWORD [-768+EBP]
   276 00000354 E8 [00000000]                   	CALL	_boxfill8
   277 00000359 53                              	PUSH	EBX
   278 0000035A 6A 07                           	PUSH	7
   279 0000035C 6A 10                           	PUSH	16
   280 0000035E 6A 20                           	PUSH	32
   281 00000360 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   282 00000367 50                              	PUSH	EAX
   283 00000368 FF B5 FFFFFD00                  	PUSH	DWORD [-768+EBP]
   284 0000036E E8 [00000000]                   	CALL	_putfonts8_asc
   285 00000373 8B 8D FFFFFD18                  	MOV	ECX,DWORD [-744+EBP]
   286 00000379 03 BD FFFFFD1C                  	ADD	EDI,DWORD [-740+EBP]
   287 0000037F 83 C4 34                        	ADD	ESP,52
   288 00000382 01 8D FFFFFD10                  	ADD	DWORD [-752+EBP],ECX
   289 00000388 0F 88 000000A3                  	JS	L22
   290 0000038E                                 L14:
   291 0000038E 85 FF                           	TEST	EDI,EDI
   292 00000390 0F 88 00000094                  	JS	L23
   293 00000396                                 L15:
   294 00000396 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   295 0000039D 83 E8 10                        	SUB	EAX,16
   296 000003A0 39 85 FFFFFD10                  	CMP	DWORD [-752+EBP],EAX
   297 000003A6 7E 06                           	JLE	L16
   298 000003A8 89 85 FFFFFD10                  	MOV	DWORD [-752+EBP],EAX
   299 000003AE                                 L16:
   300 000003AE 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   301 000003B5 83 E8 10                        	SUB	EAX,16
   302 000003B8 39 C7                           	CMP	EDI,EAX
   303 000003BA 7E 02                           	JLE	L17
   304 000003BC 89 C7                           	MOV	EDI,EAX
   305 000003BE                                 L17:
   306 000003BE 57                              	PUSH	EDI
   307 000003BF FF B5 FFFFFD10                  	PUSH	DWORD [-752+EBP]
   308 000003C5 68 [00000000]                   	PUSH	LC0
   309 000003CA 53                              	PUSH	EBX
   310 000003CB E8 [00000000]                   	CALL	_sprintf
   311 000003D0 6A 0F                           	PUSH	15
   312 000003D2 6A 4F                           	PUSH	79
   313 000003D4 6A 00                           	PUSH	0
   314 000003D6 6A 00                           	PUSH	0
   315 000003D8 6A 08                           	PUSH	8
   316 000003DA 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   317 000003E1 50                              	PUSH	EAX
   318 000003E2 FF B5 FFFFFD00                  	PUSH	DWORD [-768+EBP]
   319 000003E8 E8 [00000000]                   	CALL	_boxfill8
   320 000003ED 83 C4 2C                        	ADD	ESP,44
   321 000003F0 53                              	PUSH	EBX
   322 000003F1 6A 07                           	PUSH	7
   323 000003F3 6A 00                           	PUSH	0
   324 000003F5 6A 00                           	PUSH	0
   325 000003F7 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   326 000003FE 50                              	PUSH	EAX
   327 000003FF FF B5 FFFFFD00                  	PUSH	DWORD [-768+EBP]
   328 00000405 E8 [00000000]                   	CALL	_putfonts8_asc
   329 0000040A 57                              	PUSH	EDI
   330 0000040B FF B5 FFFFFD10                  	PUSH	DWORD [-752+EBP]
   331 00000411 FF B5 FFFFFD04                  	PUSH	DWORD [-764+EBP]
   332 00000417 FF B5 FFFFFD08                  	PUSH	DWORD [-760+EBP]
   333 0000041D E8 [00000000]                   	CALL	_sheet_slide
   334 00000422 83 C4 28                        	ADD	ESP,40
   335 00000425 E9 FFFFFE5B                     	JMP	L18
   336 0000042A                                 L23:
   337 0000042A 31 FF                           	XOR	EDI,EDI
   338 0000042C E9 FFFFFF65                     	JMP	L15
   339 00000431                                 L22:
   340 00000431 C7 85 FFFFFD10 00000000         	MOV	DWORD [-752+EBP],0
   341 0000043B E9 FFFFFF4E                     	JMP	L14
   342 00000440                                 L21:
   343 00000440 68 [00000000]                   	PUSH	_keyfifo
   344 00000445 E8 [00000000]                   	CALL	_fifo8_get
   345 0000044A 89 C3                           	MOV	EBX,EAX
   346 0000044C E8 [00000000]                   	CALL	_io_sti
   347 00000451 53                              	PUSH	EBX
   348 00000452 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   349 00000455 68 [00000031]                   	PUSH	LC2
   350 0000045A 53                              	PUSH	EBX
   351 0000045B E8 [00000000]                   	CALL	_sprintf
   352 00000460 6A 1F                           	PUSH	31
   353 00000462 6A 0F                           	PUSH	15
   354 00000464 6A 10                           	PUSH	16
   355 00000466 6A 00                           	PUSH	0
   356 00000468 6A 0F                           	PUSH	15
   357 0000046A 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   358 00000471 50                              	PUSH	EAX
   359 00000472 FF B5 FFFFFD00                  	PUSH	DWORD [-768+EBP]
   360 00000478 E8 [00000000]                   	CALL	_boxfill8
   361 0000047D 83 C4 2C                        	ADD	ESP,44
   362 00000480 53                              	PUSH	EBX
   363 00000481 6A 07                           	PUSH	7
   364 00000483 6A 10                           	PUSH	16
   365 00000485 E9 FFFFFDD8                     	JMP	L19
   366 0000048A                                 L20:
   367 0000048A E8 [00000000]                   	CALL	_io_stihlt
   368 0000048F E9 FFFFFDF1                     	JMP	L18
