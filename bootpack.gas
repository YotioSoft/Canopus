	.file	"bootpack.c"
	.data
LC0:
	.byte	67
	.byte	97
	.byte	110
	.byte	111
	.byte	112
	.byte	117
	.byte	115
	.byte	32
	.byte	79
	.byte	83
	.space 1
	.text
	.balign 2
.globl _HariMain
	.def	_HariMain;	.scl	2;	.type	32;	.endef
_HariMain:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	movl	$LC0, %esi
	subl	$16, %esp
	leal	-24(%ebp), %edi
	call	_init_palette
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_init_screen
	addl	$12, %esp
	cld
	movl	$11, %ecx
	rep
	movsb
	xorl	%esi, %esi
	movl	$60, %edi
L6:
	movsbl	-24(%ebp,%esi),%eax
	sall	$4, %eax
	incl	%esi
	addl	$_hankaku, %eax
	pushl	%eax
	pushl	$0
	pushl	$50
	pushl	%edi
	addl	$8, %edi
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putfont8
	addl	$24, %esp
	cmpl	$9, %esi
	jle	L6
L10:
	call	_io_hlt
	jmp	L10
	.balign 2
.globl _init_screen
	.def	_init_screen;	.scl	2;	.type	32;	.endef
_init_screen:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	movl	16(%ebp), %esi
	pushl	%esi
	movl	12(%ebp), %ebx
	pushl	%ebx
	movl	8(%ebp), %edi
	pushl	$0
	pushl	$0
	pushl	$8
	pushl	%ebx
	pushl	%edi
	call	_boxfill8
	leal	-10(%esi), %eax
	pushl	%esi
	subl	$40, %esi
	pushl	%ebx
	pushl	%eax
	pushl	$0
	pushl	$15
	pushl	%ebx
	pushl	%edi
	call	_boxfill8
	addl	$56, %esp
	pushl	%esi
	leal	-50(%ebx), %esi
	pushl	%esi
	pushl	$30
	pushl	$50
	pushl	$7
	pushl	%ebx
	pushl	%edi
	call	_boxfill8
	pushl	$40
	pushl	%esi
	pushl	$30
	pushl	$50
	pushl	$14
	pushl	%ebx
	pushl	%edi
	call	_boxfill8
	leal	-55(%ebx), %eax
	addl	$56, %esp
	pushl	$38
	pushl	%eax
	leal	-60(%ebx), %eax
	pushl	$33
	pushl	%eax
	pushl	$1
	pushl	%ebx
	pushl	%edi
	call	_boxfill8
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
.globl _putfont8
	.def	_putfont8;	.scl	2;	.type	32;	.endef
_putfont8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%esi, %esi
	pushl	%ebx
	movl	28(%ebp), %edi
	movb	24(%ebp), %bl
L26:
	movl	20(%ebp), %eax
	movl	16(%ebp), %edx
	addl	%esi, %eax
	imull	12(%ebp), %eax
	addl	8(%ebp), %eax
	leal	(%edx,%eax), %ecx
	movb	(%esi,%edi), %dl
	testb	%dl, %dl
	jns	L18
	movb	%bl, (%ecx)
L18:
	movb	%dl, %al
	andl	$64, %eax
	testb	%al, %al
	je	L19
	movb	%bl, 1(%ecx)
L19:
	movb	%dl, %al
	andl	$32, %eax
	testb	%al, %al
	je	L20
	movb	%bl, 2(%ecx)
L20:
	movb	%dl, %al
	andl	$16, %eax
	testb	%al, %al
	je	L21
	movb	%bl, 3(%ecx)
L21:
	movb	%dl, %al
	andl	$8, %eax
	testb	%al, %al
	je	L22
	movb	%bl, 4(%ecx)
L22:
	movb	%dl, %al
	andl	$4, %eax
	testb	%al, %al
	je	L23
	movb	%bl, 5(%ecx)
L23:
	movb	%dl, %al
	andl	$2, %eax
	testb	%al, %al
	je	L24
	movb	%bl, 6(%ecx)
L24:
	andl	$1, %edx
	testb	%dl, %dl
	je	L16
	movb	%bl, 7(%ecx)
L16:
	incl	%esi
	cmpl	$15, %esi
	jle	L26
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.data
_table_rgb.0:
	.byte	0
	.byte	0
	.byte	0
	.byte	-1
	.byte	0
	.byte	0
	.byte	0
	.byte	-1
	.byte	0
	.byte	-1
	.byte	-1
	.byte	0
	.byte	0
	.byte	0
	.byte	-1
	.byte	-1
	.byte	0
	.byte	-1
	.byte	0
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-58
	.byte	-58
	.byte	-58
	.byte	-124
	.byte	0
	.byte	0
	.byte	0
	.byte	-124
	.byte	0
	.byte	-124
	.byte	-124
	.byte	0
	.byte	0
	.byte	0
	.byte	-124
	.byte	-124
	.byte	0
	.byte	-124
	.byte	0
	.byte	-124
	.byte	-124
	.byte	-124
	.byte	-124
	.byte	-124
	.text
	.balign 2
.globl _init_palette
	.def	_init_palette;	.scl	2;	.type	32;	.endef
_init_palette:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	$_table_rgb.0
	pushl	$15
	pushl	$0
	call	_set_palette
	leave
	ret
	.balign 2
.globl _boxfill8
	.def	_boxfill8;	.scl	2;	.type	32;	.endef
_boxfill8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%ecx
	pushl	%ecx
	movb	16(%ebp), %al
	movl	24(%ebp), %ecx
	movl	28(%ebp), %edi
	movb	%al, -13(%ebp)
	cmpl	32(%ebp), %ecx
	jg	L42
	movl	12(%ebp), %ebx
	imull	%ecx, %ebx
L40:
	movl	20(%ebp), %edx
	cmpl	%edi, %edx
	jg	L44
	movl	8(%ebp), %esi
	addl	%ebx, %esi
	addl	%edx, %esi
	movl	%esi, -20(%ebp)
L39:
	movl	-20(%ebp), %esi
	movb	-13(%ebp), %al
	incl	%edx
	movb	%al, (%esi)
	incl	%esi
	movl	%esi, -20(%ebp)
	cmpl	%edi, %edx
	jle	L39
L44:
	incl	%ecx
	addl	12(%ebp), %ebx
	cmpl	32(%ebp), %ecx
	jle	L40
L42:
	popl	%eax
	popl	%edx
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
.globl _set_palette
	.def	_set_palette;	.scl	2;	.type	32;	.endef
_set_palette:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%ecx
	movl	8(%ebp), %ebx
	movl	12(%ebp), %edi
	movl	16(%ebp), %esi
	call	_io_load_eflags
	movl	%eax, -16(%ebp)
	call	_io_cli
	pushl	%ebx
	pushl	$968
	call	_io_out8
	cmpl	%edi, %ebx
	popl	%eax
	popl	%edx
	jle	L50
L52:
	movl	-16(%ebp), %eax
	movl	%eax, 8(%ebp)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	jmp	_io_store_eflags
L50:
	movb	(%esi), %al
	incl	%ebx
	shrb	$2, %al
	movzbl	%al, %eax
	pushl	%eax
	pushl	$969
	call	_io_out8
	movb	1(%esi), %al
	shrb	$2, %al
	movzbl	%al, %eax
	pushl	%eax
	pushl	$969
	call	_io_out8
	movb	2(%esi), %al
	shrb	$2, %al
	addl	$3, %esi
	movzbl	%al, %eax
	pushl	%eax
	pushl	$969
	call	_io_out8
	addl	$24, %esp
	cmpl	%edi, %ebx
	jle	L50
	jmp	L52
	.def	_io_store_eflags;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_io_load_eflags;	.scl	2;	.type	32;	.endef
	.def	_set_palette;	.scl	2;	.type	32;	.endef
	.def	_boxfill8;	.scl	2;	.type	32;	.endef
	.def	_io_hlt;	.scl	2;	.type	32;	.endef
	.def	_putfont8;	.scl	2;	.type	32;	.endef
	.def	_init_screen;	.scl	2;	.type	32;	.endef
	.def	_init_palette;	.scl	2;	.type	32;	.endef
